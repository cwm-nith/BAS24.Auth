<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BAS24.Auth.Api</name>
    </assembly>
    <members>
        <member name="M:BAS24.Auth.Api.Controllers.V1.StoreController.CreateStoreAsync(BAS24.Api.Dtos.Stores.CreateStoreDto)">
            <summary>
            Create store
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.StoreController.GetStoreListAsync(BAS24.Api.Dtos.Stores.GetStoresPageDto)">
            <summary>
            return all stores or base on owner
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.StoreController.GetStoreByIdAsync(System.String,System.Boolean)">
            <summary>
            return store base on its id
            </summary>
            <param name="id">store id in string</param>
            <param name="isActive">Default value is true</param>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.StoreController.GetStoreByIdAndOwnerIdAsync(System.String,System.String,System.Boolean)">
            <summary>
            return store base on its id and owner id
            </summary>
            <param name="id"></param>
            <param name="ownerId"></param>
            <param name="isActive">Default value is true</param>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.StoreController.VerifyStoreAsync(BAS24.Api.Dtos.Stores.VerifyStoreDto)">
            <summary>
            Verify store by store owner
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.StoreController.DeactivateStoreAsync(BAS24.Api.Dtos.Stores.DeactivateStoreDto)">
            <summary>
            Deactivate store. This action is for store admin only
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.StoreController.ActivateStoreAsync(BAS24.Api.Dtos.Stores.ActivateStoreDto)">
            <summary>
            Activate store. This action is for store admin only
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.StoreController.AddMemberAsync(BAS24.Api.Dtos.Stores.AddMemberDto)">
            <summary>
            Add member to store
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.StoreController.UpdateMemberRoleAsync(BAS24.Api.Dtos.Stores.UpdateRoleOfStoreMemberDto)">
            <summary>
            Update member role
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.StoreController.GetRolesAsync">
            <summary>
            Get store roles
            </summary>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.StoreController.GetStoreMembersAsync(BAS24.Api.Dtos.Stores.GetStoreMembersDto)">
            <summary>
            Return all store member (Filter: 1: all, 2: accepted, 3: not accepted)
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.StoreController.RemoveStoreMemberAsync(BAS24.Api.Dtos.Stores.RemoveStoreMemberDto)">
            <summary>
            Remove store member
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.StoreController.AcceptedAddStoreMemberAsync(BAS24.Api.Dtos.Stores.AcceptedAddMemberRequestDto)">
            <summary>
            accepted add store member
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.StoreController.UpdateStoreAsync(BAS24.Api.Dtos.Stores.UpdateStoreDto)">
            <summary>
            Update store
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.StoreController.DeleteStoreAsync(System.Guid)">
            <summary>
            Hard delete store
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.UserController.LoginAsync(BAS24.Api.Dtos.Users.LoginDto)">
            <summary>
              user login
            </summary>
            <param name="login"></param>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.UserController.UpdateUserAsync(BAS24.Api.Dtos.Users.UpdateUserDto)">
            <summary>
              update user
            </summary>
            <param name="update"></param>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.UserController.RemoveUserAsync(System.Guid)">
            <summary>
              remove user by id
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.UserController.GetUserListAsync(BAS24.Api.Dtos.Users.GetUserPageDto)">
            <summary>
              get user list
            </summary>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.UserController.VerifyAsync(BAS24.Api.Dtos.Twilio.VerifyCodeDto)">
            <summary>
              Verify Code
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.UserController.SendCodeAsync(BAS24.Api.Dtos.Twilio.SendSmsDto)">
            <summary>
              Send Code
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.UserController.GetMeAsync">
            <summary>
            return current user login
            </summary>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.UserController.GetUserByIdAsync(System.String)">
            <summary>
            return user by id specify
            </summary>
            <returns></returns>
        </member>
        <member name="M:BAS24.Auth.Api.Controllers.V1.UserController.GetUserByIdAsync(System.String,BAS24.Api.Dtos.Users.UpdateUserDto)">
            <summary>
            update user by id specify
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
